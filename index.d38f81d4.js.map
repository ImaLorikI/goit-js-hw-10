{"mappings":"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","sources":["node_modules/slim-select/dist/slimselect.umd.js","src/index.js","src/js/cat-api.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SlimSelect = factory());\n})(this, (function () { 'use strict';\n\n    function generateID() {\n        return Math.random().toString(36).substring(2, 10);\n    }\n    function hasClassInTree(element, className) {\n        function hasClass(e, c) {\n            if (c && e && e.classList && e.classList.contains(c)) {\n                return e;\n            }\n            if (c && e && e.dataset && e.dataset.id && e.dataset.id === className) {\n                return e;\n            }\n            return null;\n        }\n        function parentByClass(e, c) {\n            if (!e || e === document) {\n                return null;\n            }\n            else if (hasClass(e, c)) {\n                return e;\n            }\n            else {\n                return parentByClass(e.parentNode, c);\n            }\n        }\n        return hasClass(element, className) || parentByClass(element, className);\n    }\n    function debounce(func, wait = 50, immediate = false) {\n        let timeout;\n        return function (...args) {\n            const context = self;\n            const later = () => {\n                timeout = null;\n                if (!immediate) {\n                    func.apply(context, args);\n                }\n            };\n            const callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) {\n                func.apply(context, args);\n            }\n        };\n    }\n    function isEqual(a, b) {\n        return JSON.stringify(a) === JSON.stringify(b);\n    }\n    function kebabCase(str) {\n        const result = str.replace(/[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g, (match) => '-' + match.toLowerCase());\n        return str[0] === str[0].toUpperCase() ? result.substring(1) : result;\n    }\n\n    class Settings {\n        constructor(settings) {\n            this.id = '';\n            this.style = '';\n            this.class = [];\n            this.isMultiple = false;\n            this.isOpen = false;\n            this.isFullOpen = false;\n            this.intervalMove = null;\n            if (!settings) {\n                settings = {};\n            }\n            this.id = 'ss-' + generateID();\n            this.style = settings.style || '';\n            this.class = settings.class || [];\n            this.disabled = settings.disabled !== undefined ? settings.disabled : false;\n            this.alwaysOpen = settings.alwaysOpen !== undefined ? settings.alwaysOpen : false;\n            this.showSearch = settings.showSearch !== undefined ? settings.showSearch : true;\n            this.ariaLabel = settings.ariaLabel || 'Combobox';\n            this.searchPlaceholder = settings.searchPlaceholder || 'Search';\n            this.searchText = settings.searchText || 'No Results';\n            this.searchingText = settings.searchingText || 'Searching...';\n            this.searchHighlight = settings.searchHighlight !== undefined ? settings.searchHighlight : false;\n            this.closeOnSelect = settings.closeOnSelect !== undefined ? settings.closeOnSelect : true;\n            this.contentLocation = settings.contentLocation || document.body;\n            this.contentPosition = settings.contentPosition || 'absolute';\n            this.openPosition = settings.openPosition || 'auto';\n            this.placeholderText = settings.placeholderText !== undefined ? settings.placeholderText : 'Select Value';\n            this.allowDeselect = settings.allowDeselect !== undefined ? settings.allowDeselect : false;\n            this.hideSelected = settings.hideSelected !== undefined ? settings.hideSelected : false;\n            this.showOptionTooltips = settings.showOptionTooltips !== undefined ? settings.showOptionTooltips : false;\n            this.minSelected = settings.minSelected || 0;\n            this.maxSelected = settings.maxSelected || 1000;\n            this.timeoutDelay = settings.timeoutDelay || 200;\n            this.maxValuesShown = settings.maxValuesShown || 20;\n            this.maxValuesMessage = settings.maxValuesMessage || '{number} selected';\n        }\n    }\n\n    class Optgroup {\n        constructor(optgroup) {\n            this.id = !optgroup.id || optgroup.id === '' ? generateID() : optgroup.id;\n            this.label = optgroup.label || '';\n            this.selectAll = optgroup.selectAll === undefined ? false : optgroup.selectAll;\n            this.selectAllText = optgroup.selectAllText || 'Select All';\n            this.closable = optgroup.closable || 'off';\n            this.options = [];\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    this.options.push(new Option(o));\n                }\n            }\n        }\n    }\n    class Option {\n        constructor(option) {\n            this.id = !option.id || option.id === '' ? generateID() : option.id;\n            this.value = option.value === undefined ? option.text : option.value;\n            this.text = option.text || '';\n            this.html = option.html || '';\n            this.selected = option.selected !== undefined ? option.selected : false;\n            this.display = option.display !== undefined ? option.display : true;\n            this.disabled = option.disabled !== undefined ? option.disabled : false;\n            this.mandatory = option.mandatory !== undefined ? option.mandatory : false;\n            this.placeholder = option.placeholder !== undefined ? option.placeholder : false;\n            this.class = option.class || '';\n            this.style = option.style || '';\n            this.data = option.data || {};\n        }\n    }\n    class Store {\n        constructor(type, data) {\n            this.selectType = 'single';\n            this.data = [];\n            this.selectType = type;\n            this.setData(data);\n        }\n        validateDataArray(data) {\n            if (!Array.isArray(data)) {\n                return new Error('Data must be an array');\n            }\n            for (let dataObj of data) {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    if (!('label' in dataObj)) {\n                        return new Error('Optgroup must have a label');\n                    }\n                    if ('options' in dataObj && dataObj.options) {\n                        for (let option of dataObj.options) {\n                            return this.validateOption(option);\n                        }\n                    }\n                }\n                else if (dataObj instanceof Option || 'text' in dataObj) {\n                    return this.validateOption(dataObj);\n                }\n                else {\n                    return new Error('Data object must be a valid optgroup or option');\n                }\n            }\n            return null;\n        }\n        validateOption(option) {\n            if (!('text' in option)) {\n                return new Error('Option must have a text');\n            }\n            return null;\n        }\n        partialToFullData(data) {\n            let dataFinal = [];\n            data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    let optOptions = [];\n                    if ('options' in dataObj && dataObj.options) {\n                        dataObj.options.forEach((option) => {\n                            optOptions.push(new Option(option));\n                        });\n                    }\n                    if (optOptions.length > 0) {\n                        dataFinal.push(new Optgroup(dataObj));\n                    }\n                }\n                if (dataObj instanceof Option || 'text' in dataObj) {\n                    dataFinal.push(new Option(dataObj));\n                }\n            });\n            return dataFinal;\n        }\n        setData(data) {\n            this.data = this.partialToFullData(data);\n            if (this.selectType === 'single') {\n                this.setSelectedBy('value', this.getSelected());\n            }\n        }\n        getData() {\n            return this.filter(null, true);\n        }\n        getDataOptions() {\n            return this.filter(null, false);\n        }\n        addOption(option) {\n            this.setData(this.getData().concat(new Option(option)));\n        }\n        setSelectedBy(selectedType, selectedValues) {\n            let firstOption = null;\n            let hasSelected = false;\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup) {\n                    for (let option of dataObj.options) {\n                        if (!firstOption) {\n                            firstOption = option;\n                        }\n                        option.selected = hasSelected ? false : selectedValues.includes(option[selectedType]);\n                        if (option.selected && this.selectType === 'single') {\n                            hasSelected = true;\n                        }\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!firstOption) {\n                        firstOption = dataObj;\n                    }\n                    dataObj.selected = hasSelected ? false : selectedValues.includes(dataObj[selectedType]);\n                    if (dataObj.selected && this.selectType === 'single') {\n                        hasSelected = true;\n                    }\n                }\n            }\n            if (this.selectType === 'single' && firstOption && !hasSelected) {\n                firstOption.selected = true;\n            }\n        }\n        getSelected() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedValues = [];\n            selectedOptions.forEach((option) => {\n                selectedValues.push(option.value);\n            });\n            return selectedValues;\n        }\n        getSelectedOptions() {\n            return this.filter((opt) => {\n                return opt.selected;\n            }, false);\n        }\n        getSelectedIDs() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedIDs = [];\n            selectedOptions.forEach((op) => {\n                selectedIDs.push(op.id);\n            });\n            return selectedIDs;\n        }\n        getOptgroupByID(id) {\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup && dataObj.id === id) {\n                    return dataObj;\n                }\n            }\n            return null;\n        }\n        getOptionByID(id) {\n            let options = this.filter((opt) => {\n                return opt.id === id;\n            }, false);\n            return options.length ? options[0] : null;\n        }\n        getSelectType() {\n            return this.selectType;\n        }\n        getFirstOption() {\n            let option = null;\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup) {\n                    option = dataObj.options[0];\n                }\n                else if (dataObj instanceof Option) {\n                    option = dataObj;\n                }\n                if (option) {\n                    break;\n                }\n            }\n            return option;\n        }\n        search(search, searchFilter) {\n            search = search.trim();\n            if (search === '') {\n                return this.getData();\n            }\n            return this.filter((opt) => {\n                return searchFilter(opt, search);\n            }, true);\n        }\n        filter(filter, includeOptgroup) {\n            const dataSearch = [];\n            this.data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup) {\n                    let optOptions = [];\n                    dataObj.options.forEach((option) => {\n                        if (!filter || filter(option)) {\n                            if (!includeOptgroup) {\n                                dataSearch.push(new Option(option));\n                            }\n                            else {\n                                optOptions.push(new Option(option));\n                            }\n                        }\n                    });\n                    if (optOptions.length > 0) {\n                        let optgroup = new Optgroup(dataObj);\n                        optgroup.options = optOptions;\n                        dataSearch.push(optgroup);\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!filter || filter(dataObj)) {\n                        dataSearch.push(new Option(dataObj));\n                    }\n                }\n            });\n            return dataSearch;\n        }\n    }\n\n    class Render {\n        constructor(settings, store, callbacks) {\n            this.classes = {\n                main: 'ss-main',\n                placeholder: 'ss-placeholder',\n                values: 'ss-values',\n                single: 'ss-single',\n                max: 'ss-max',\n                value: 'ss-value',\n                valueText: 'ss-value-text',\n                valueDelete: 'ss-value-delete',\n                valueOut: 'ss-value-out',\n                deselect: 'ss-deselect',\n                deselectPath: 'M10,10 L90,90 M10,90 L90,10',\n                arrow: 'ss-arrow',\n                arrowClose: 'M10,30 L50,70 L90,30',\n                arrowOpen: 'M10,70 L50,30 L90,70',\n                content: 'ss-content',\n                openAbove: 'ss-open-above',\n                openBelow: 'ss-open-below',\n                search: 'ss-search',\n                searchHighlighter: 'ss-search-highlight',\n                searching: 'ss-searching',\n                addable: 'ss-addable',\n                addablePath: 'M50,10 L50,90 M10,50 L90,50',\n                list: 'ss-list',\n                optgroup: 'ss-optgroup',\n                optgroupLabel: 'ss-optgroup-label',\n                optgroupLabelText: 'ss-optgroup-label-text',\n                optgroupActions: 'ss-optgroup-actions',\n                optgroupSelectAll: 'ss-selectall',\n                optgroupSelectAllBox: 'M60,10 L10,10 L10,90 L90,90 L90,50',\n                optgroupSelectAllCheck: 'M30,45 L50,70 L90,10',\n                optgroupClosable: 'ss-closable',\n                option: 'ss-option',\n                optionDelete: 'M10,10 L90,90 M10,90 L90,10',\n                highlighted: 'ss-highlighted',\n                open: 'ss-open',\n                close: 'ss-close',\n                selected: 'ss-selected',\n                error: 'ss-error',\n                disabled: 'ss-disabled',\n                hide: 'ss-hide',\n            };\n            this.store = store;\n            this.settings = settings;\n            this.callbacks = callbacks;\n            this.main = this.mainDiv();\n            this.content = this.contentDiv();\n            this.updateClassStyles();\n            this.updateAriaAttributes();\n            this.settings.contentLocation.appendChild(this.content.main);\n        }\n        enable() {\n            this.main.main.classList.remove(this.classes.disabled);\n            this.content.search.input.disabled = false;\n        }\n        disable() {\n            this.main.main.classList.add(this.classes.disabled);\n            this.content.search.input.disabled = true;\n        }\n        open() {\n            this.main.arrow.path.setAttribute('d', this.classes.arrowOpen);\n            this.main.main.classList.add(this.settings.openPosition === 'up' ? this.classes.openAbove : this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'true');\n            this.moveContent();\n            const selectedOptions = this.store.getSelectedOptions();\n            if (selectedOptions.length) {\n                const selectedId = selectedOptions[selectedOptions.length - 1].id;\n                const selectedOption = this.content.list.querySelector('[data-id=\"' + selectedId + '\"]');\n                if (selectedOption) {\n                    this.ensureElementInView(this.content.list, selectedOption);\n                }\n            }\n        }\n        close() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.main.arrow.path.setAttribute('d', this.classes.arrowClose);\n        }\n        updateClassStyles() {\n            this.main.main.className = '';\n            this.main.main.removeAttribute('style');\n            this.content.main.className = '';\n            this.content.main.removeAttribute('style');\n            this.main.main.classList.add(this.classes.main);\n            this.content.main.classList.add(this.classes.content);\n            if (this.settings.style !== '') {\n                this.main.main.style.cssText = this.settings.style;\n                this.content.main.style.cssText = this.settings.style;\n            }\n            if (this.settings.class.length) {\n                for (const c of this.settings.class) {\n                    if (c.trim() !== '') {\n                        this.main.main.classList.add(c.trim());\n                        this.content.main.classList.add(c.trim());\n                    }\n                }\n            }\n            if (this.settings.contentPosition === 'relative') {\n                this.content.main.classList.add('ss-' + this.settings.contentPosition);\n            }\n        }\n        updateAriaAttributes() {\n            this.main.main.role = 'combobox';\n            this.main.main.setAttribute('aria-haspopup', 'listbox');\n            this.main.main.setAttribute('aria-controls', this.content.main.id);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.setAttribute('role', 'listbox');\n        }\n        mainDiv() {\n            var _a;\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.setAttribute('aria-label', this.settings.ariaLabel);\n            main.tabIndex = 0;\n            main.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        this.callbacks.open();\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Enter':\n                    case ' ':\n                        this.callbacks.open();\n                        const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                        if (highlighted) {\n                            highlighted.click();\n                        }\n                        return false;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                }\n                return false;\n            };\n            main.onclick = (e) => {\n                if (this.settings.disabled) {\n                    return;\n                }\n                this.settings.isOpen ? this.callbacks.close() : this.callbacks.open();\n            };\n            const values = document.createElement('div');\n            values.classList.add(this.classes.values);\n            main.appendChild(values);\n            const deselect = document.createElement('div');\n            deselect.classList.add(this.classes.deselect);\n            const selectedOptions = (_a = this.store) === null || _a === void 0 ? void 0 : _a.getSelectedOptions();\n            if (!this.settings.allowDeselect || (this.settings.isMultiple && selectedOptions && selectedOptions.length <= 0)) {\n                deselect.classList.add(this.classes.hide);\n            }\n            else {\n                deselect.classList.remove(this.classes.hide);\n            }\n            deselect.onclick = (e) => {\n                e.stopPropagation();\n                if (this.settings.disabled) {\n                    return;\n                }\n                let shouldDelete = true;\n                const before = this.store.getSelectedOptions();\n                const after = [];\n                if (this.callbacks.beforeChange) {\n                    shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                }\n                if (shouldDelete) {\n                    if (this.settings.isMultiple) {\n                        this.callbacks.setSelected([], false);\n                        this.updateDeselectAll();\n                    }\n                    else {\n                        const firstOption = this.store.getFirstOption();\n                        const value = firstOption ? firstOption.value : '';\n                        this.callbacks.setSelected(value, false);\n                    }\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(this.store.getSelectedOptions());\n                    }\n                }\n            };\n            const deselectSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            deselectSvg.setAttribute('viewBox', '0 0 100 100');\n            const deselectPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            deselectPath.setAttribute('d', this.classes.deselectPath);\n            deselectSvg.appendChild(deselectPath);\n            deselect.appendChild(deselectSvg);\n            main.appendChild(deselect);\n            const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            arrow.classList.add(this.classes.arrow);\n            arrow.setAttribute('viewBox', '0 0 100 100');\n            const arrowPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            arrowPath.setAttribute('d', this.classes.arrowClose);\n            if (this.settings.alwaysOpen) {\n                arrow.classList.add(this.classes.hide);\n            }\n            arrow.appendChild(arrowPath);\n            main.appendChild(arrow);\n            return {\n                main: main,\n                values: values,\n                deselect: {\n                    main: deselect,\n                    svg: deselectSvg,\n                    path: deselectPath,\n                },\n                arrow: {\n                    main: arrow,\n                    path: arrowPath,\n                },\n            };\n        }\n        mainFocus(eventType) {\n            if (eventType !== 'click') {\n                this.main.main.focus({ preventScroll: true });\n            }\n        }\n        placeholder() {\n            const placeholderOption = this.store.filter((o) => o.placeholder, false);\n            let placeholderText = this.settings.placeholderText;\n            if (placeholderOption.length) {\n                if (placeholderOption[0].html !== '') {\n                    placeholderText = placeholderOption[0].html;\n                }\n                else if (placeholderOption[0].text !== '') {\n                    placeholderText = placeholderOption[0].text;\n                }\n            }\n            const placeholder = document.createElement('div');\n            placeholder.classList.add(this.classes.placeholder);\n            placeholder.innerHTML = placeholderText;\n            return placeholder;\n        }\n        renderValues() {\n            if (!this.settings.isMultiple) {\n                this.renderSingleValue();\n                return;\n            }\n            this.renderMultipleValues();\n        }\n        renderSingleValue() {\n            const selected = this.store.filter((o) => {\n                return o.selected && !o.placeholder;\n            }, false);\n            const selectedSingle = selected.length > 0 ? selected[0] : null;\n            if (!selectedSingle) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n            }\n            else {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.single);\n                if (selectedSingle.html) {\n                    singleValue.innerHTML = selectedSingle.html;\n                }\n                else {\n                    singleValue.innerText = selectedSingle.text;\n                }\n                this.main.values.innerHTML = singleValue.outerHTML;\n            }\n            if (!this.settings.allowDeselect || !selected.length) {\n                this.main.deselect.main.classList.add(this.classes.hide);\n            }\n            else {\n                this.main.deselect.main.classList.remove(this.classes.hide);\n            }\n        }\n        renderMultipleValues() {\n            let currentNodes = this.main.values.childNodes;\n            let selectedOptions = this.store.filter((opt) => {\n                return opt.selected && opt.display;\n            }, false);\n            if (selectedOptions.length === 0) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n                return;\n            }\n            else {\n                const placeholder = this.main.values.querySelector('.' + this.classes.placeholder);\n                if (placeholder) {\n                    placeholder.remove();\n                }\n            }\n            if (selectedOptions.length > this.settings.maxValuesShown) {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.max);\n                singleValue.textContent = this.settings.maxValuesMessage.replace('{number}', selectedOptions.length.toString());\n                this.main.values.innerHTML = singleValue.outerHTML;\n                return;\n            }\n            else {\n                const maxValuesMessage = this.main.values.querySelector('.' + this.classes.max);\n                if (maxValuesMessage) {\n                    maxValuesMessage.remove();\n                }\n            }\n            let removeNodes = [];\n            for (let i = 0; i < currentNodes.length; i++) {\n                const node = currentNodes[i];\n                const id = node.getAttribute('data-id');\n                if (id) {\n                    const found = selectedOptions.filter((opt) => {\n                        return opt.id === id;\n                    }, false);\n                    if (!found.length) {\n                        removeNodes.push(node);\n                    }\n                }\n            }\n            for (const n of removeNodes) {\n                n.classList.add(this.classes.valueOut);\n                setTimeout(() => {\n                    if (this.main.values.hasChildNodes() && this.main.values.contains(n)) {\n                        this.main.values.removeChild(n);\n                    }\n                }, 100);\n            }\n            currentNodes = this.main.values.childNodes;\n            for (let d = 0; d < selectedOptions.length; d++) {\n                let shouldAdd = true;\n                for (let i = 0; i < currentNodes.length; i++) {\n                    if (selectedOptions[d].id === String(currentNodes[i].dataset.id)) {\n                        shouldAdd = false;\n                    }\n                }\n                if (shouldAdd) {\n                    if (currentNodes.length === 0) {\n                        this.main.values.appendChild(this.multipleValue(selectedOptions[d]));\n                    }\n                    else if (d === 0) {\n                        this.main.values.insertBefore(this.multipleValue(selectedOptions[d]), currentNodes[d]);\n                    }\n                    else {\n                        currentNodes[d - 1].insertAdjacentElement('afterend', this.multipleValue(selectedOptions[d]));\n                    }\n                }\n            }\n            this.updateDeselectAll();\n        }\n        multipleValue(option) {\n            const value = document.createElement('div');\n            value.classList.add(this.classes.value);\n            value.dataset.id = option.id;\n            const text = document.createElement('div');\n            text.classList.add(this.classes.valueText);\n            text.innerText = option.text;\n            value.appendChild(text);\n            if (!option.mandatory) {\n                const deleteDiv = document.createElement('div');\n                deleteDiv.classList.add(this.classes.valueDelete);\n                deleteDiv.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (this.settings.disabled) {\n                        return;\n                    }\n                    let shouldDelete = true;\n                    const before = this.store.getSelectedOptions();\n                    const after = before.filter((o) => {\n                        return o.selected && o.id !== option.id;\n                    }, true);\n                    if (this.settings.minSelected && after.length < this.settings.minSelected) {\n                        return;\n                    }\n                    if (this.callbacks.beforeChange) {\n                        shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                    }\n                    if (shouldDelete) {\n                        let selectedValues = [];\n                        for (const o of after) {\n                            if (o instanceof Optgroup) {\n                                for (const c of o.options) {\n                                    selectedValues.push(c.value);\n                                }\n                            }\n                            if (o instanceof Option) {\n                                selectedValues.push(o.value);\n                            }\n                        }\n                        this.callbacks.setSelected(selectedValues, false);\n                        if (this.settings.closeOnSelect) {\n                            this.callbacks.close();\n                        }\n                        if (this.callbacks.afterChange) {\n                            this.callbacks.afterChange(after);\n                        }\n                        this.updateDeselectAll();\n                    }\n                };\n                const deleteSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                deleteSvg.setAttribute('viewBox', '0 0 100 100');\n                const deletePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                deletePath.setAttribute('d', this.classes.optionDelete);\n                deleteSvg.appendChild(deletePath);\n                deleteDiv.appendChild(deleteSvg);\n                value.appendChild(deleteDiv);\n            }\n            return value;\n        }\n        contentDiv() {\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            const search = this.searchDiv();\n            main.appendChild(search.main);\n            const list = this.listDiv();\n            main.appendChild(list);\n            return {\n                main: main,\n                search: search,\n                list: list,\n            };\n        }\n        moveContent() {\n            if (this.settings.contentPosition === 'relative') {\n                this.moveContentBelow();\n                return;\n            }\n            if (this.settings.openPosition === 'down') {\n                this.moveContentBelow();\n                return;\n            }\n            else if (this.settings.openPosition === 'up') {\n                this.moveContentAbove();\n                return;\n            }\n            if (this.putContent() === 'up') {\n                this.moveContentAbove();\n            }\n            else {\n                this.moveContentBelow();\n            }\n        }\n        searchDiv() {\n            const main = document.createElement('div');\n            const input = document.createElement('input');\n            const addable = document.createElement('div');\n            main.classList.add(this.classes.search);\n            const searchReturn = {\n                main,\n                input,\n            };\n            if (!this.settings.showSearch) {\n                main.classList.add(this.classes.hide);\n                input.readOnly = true;\n            }\n            input.type = 'search';\n            input.placeholder = this.settings.searchPlaceholder;\n            input.tabIndex = -1;\n            input.setAttribute('aria-label', this.settings.searchPlaceholder);\n            input.setAttribute('autocapitalize', 'off');\n            input.setAttribute('autocomplete', 'off');\n            input.setAttribute('autocorrect', 'off');\n            input.oninput = debounce((e) => {\n                this.callbacks.search(e.target.value);\n            }, 100);\n            input.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                    case 'Enter':\n                    case ' ':\n                        if (this.callbacks.addable && e.ctrlKey) {\n                            addable.click();\n                            return false;\n                        }\n                        else {\n                            const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                            if (highlighted) {\n                                highlighted.click();\n                                return false;\n                            }\n                        }\n                        return true;\n                }\n                return true;\n            };\n            main.appendChild(input);\n            if (this.callbacks.addable) {\n                addable.classList.add(this.classes.addable);\n                const plus = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                plus.setAttribute('viewBox', '0 0 100 100');\n                const plusPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                plusPath.setAttribute('d', this.classes.addablePath);\n                plus.appendChild(plusPath);\n                addable.appendChild(plus);\n                addable.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (!this.callbacks.addable) {\n                        return;\n                    }\n                    const inputValue = this.content.search.input.value.trim();\n                    if (inputValue === '') {\n                        this.content.search.input.focus();\n                        return;\n                    }\n                    const runFinish = (oo) => {\n                        let newOption = new Option(oo);\n                        this.callbacks.addOption(newOption);\n                        if (this.settings.isMultiple) {\n                            let values = this.store.getSelected();\n                            values.push(newOption.value);\n                            this.callbacks.setSelected(values, true);\n                        }\n                        else {\n                            this.callbacks.setSelected([newOption.value], true);\n                        }\n                        this.callbacks.search('');\n                        if (this.settings.closeOnSelect) {\n                            setTimeout(() => {\n                                this.callbacks.close();\n                            }, 100);\n                        }\n                    };\n                    const addableValue = this.callbacks.addable(inputValue);\n                    if (addableValue === false || addableValue === undefined || addableValue === null) {\n                        return;\n                    }\n                    if (addableValue instanceof Promise) {\n                        addableValue.then((value) => {\n                            if (typeof value === 'string') {\n                                runFinish({\n                                    text: value,\n                                    value: value,\n                                });\n                            }\n                            else {\n                                runFinish(value);\n                            }\n                        });\n                    }\n                    else if (typeof addableValue === 'string') {\n                        runFinish({\n                            text: addableValue,\n                            value: addableValue,\n                        });\n                    }\n                    else {\n                        runFinish(addableValue);\n                    }\n                    return;\n                };\n                main.appendChild(addable);\n                searchReturn.addable = {\n                    main: addable,\n                    svg: plus,\n                    path: plusPath,\n                };\n            }\n            return searchReturn;\n        }\n        searchFocus() {\n            this.content.search.input.focus();\n        }\n        getOptions(notPlaceholder = false, notDisabled = false, notHidden = false) {\n            let query = '.' + this.classes.option;\n            if (notPlaceholder) {\n                query += ':not(.' + this.classes.placeholder + ')';\n            }\n            if (notDisabled) {\n                query += ':not(.' + this.classes.disabled + ')';\n            }\n            if (notHidden) {\n                query += ':not(.' + this.classes.hide + ')';\n            }\n            return Array.from(this.content.list.querySelectorAll(query));\n        }\n        highlight(dir) {\n            const options = this.getOptions(true, true, true);\n            if (options.length === 0) {\n                return;\n            }\n            if (options.length === 1) {\n                if (!options[0].classList.contains(this.classes.highlighted)) {\n                    options[0].classList.add(this.classes.highlighted);\n                    return;\n                }\n            }\n            let highlighted = false;\n            for (const o of options) {\n                if (o.classList.contains(this.classes.highlighted)) {\n                    highlighted = true;\n                }\n            }\n            if (!highlighted) {\n                for (const o of options) {\n                    if (o.classList.contains(this.classes.selected)) {\n                        o.classList.add(this.classes.highlighted);\n                        break;\n                    }\n                }\n            }\n            for (let i = 0; i < options.length; i++) {\n                if (options[i].classList.contains(this.classes.highlighted)) {\n                    const prevOption = options[i];\n                    prevOption.classList.remove(this.classes.highlighted);\n                    const prevParent = prevOption.parentElement;\n                    if (prevParent && prevParent.classList.contains(this.classes.open)) {\n                        const optgroupLabel = prevParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    let selectOption = options[dir === 'down' ? (i + 1 < options.length ? i + 1 : 0) : i - 1 >= 0 ? i - 1 : options.length - 1];\n                    selectOption.classList.add(this.classes.highlighted);\n                    this.ensureElementInView(this.content.list, selectOption);\n                    const selectParent = selectOption.parentElement;\n                    if (selectParent && selectParent.classList.contains(this.classes.close)) {\n                        const optgroupLabel = selectParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    return;\n                }\n            }\n            options[dir === 'down' ? 0 : options.length - 1].classList.add(this.classes.highlighted);\n            this.ensureElementInView(this.content.list, options[dir === 'down' ? 0 : options.length - 1]);\n        }\n        listDiv() {\n            const options = document.createElement('div');\n            options.classList.add(this.classes.list);\n            return options;\n        }\n        renderError(error) {\n            this.content.list.innerHTML = '';\n            const errorDiv = document.createElement('div');\n            errorDiv.classList.add(this.classes.error);\n            errorDiv.textContent = error;\n            this.content.list.appendChild(errorDiv);\n        }\n        renderSearching() {\n            this.content.list.innerHTML = '';\n            const searchingDiv = document.createElement('div');\n            searchingDiv.classList.add(this.classes.searching);\n            searchingDiv.textContent = this.settings.searchingText;\n            this.content.list.appendChild(searchingDiv);\n        }\n        renderOptions(data) {\n            this.content.list.innerHTML = '';\n            if (data.length === 0) {\n                const noResults = document.createElement('div');\n                noResults.classList.add(this.classes.search);\n                noResults.innerHTML = this.settings.searchText;\n                this.content.list.appendChild(noResults);\n                return;\n            }\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    const optgroupEl = document.createElement('div');\n                    optgroupEl.classList.add(this.classes.optgroup);\n                    const optgroupLabel = document.createElement('div');\n                    optgroupLabel.classList.add(this.classes.optgroupLabel);\n                    optgroupEl.appendChild(optgroupLabel);\n                    const optgroupLabelText = document.createElement('div');\n                    optgroupLabelText.classList.add(this.classes.optgroupLabelText);\n                    optgroupLabelText.textContent = d.label;\n                    optgroupLabel.appendChild(optgroupLabelText);\n                    const optgroupActions = document.createElement('div');\n                    optgroupActions.classList.add(this.classes.optgroupActions);\n                    optgroupLabel.appendChild(optgroupActions);\n                    if (this.settings.isMultiple && d.selectAll) {\n                        const selectAll = document.createElement('div');\n                        selectAll.classList.add(this.classes.optgroupSelectAll);\n                        let allSelected = true;\n                        for (const o of d.options) {\n                            if (!o.selected) {\n                                allSelected = false;\n                                break;\n                            }\n                        }\n                        if (allSelected) {\n                            selectAll.classList.add(this.classes.selected);\n                        }\n                        const selectAllText = document.createElement('span');\n                        selectAllText.textContent = d.selectAllText;\n                        selectAll.appendChild(selectAllText);\n                        const selectAllSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        selectAllSvg.setAttribute('viewBox', '0 0 100 100');\n                        selectAll.appendChild(selectAllSvg);\n                        const selectAllBox = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllBox.setAttribute('d', this.classes.optgroupSelectAllBox);\n                        selectAllSvg.appendChild(selectAllBox);\n                        const selectAllCheck = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllCheck.setAttribute('d', this.classes.optgroupSelectAllCheck);\n                        selectAllSvg.appendChild(selectAllCheck);\n                        selectAll.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            const currentSelected = this.store.getSelected();\n                            if (allSelected) {\n                                const newSelected = currentSelected.filter((s) => {\n                                    for (const o of d.options) {\n                                        if (s === o.value) {\n                                            return false;\n                                        }\n                                    }\n                                    return true;\n                                });\n                                this.callbacks.setSelected(newSelected, true);\n                                return;\n                            }\n                            else {\n                                const newSelected = currentSelected.concat(d.options.map((o) => o.value));\n                                for (const o of d.options) {\n                                    if (!this.store.getOptionByID(o.id)) {\n                                        this.callbacks.addOption(o);\n                                    }\n                                }\n                                this.callbacks.setSelected(newSelected, true);\n                                return;\n                            }\n                        });\n                        optgroupActions.appendChild(selectAll);\n                    }\n                    if (d.closable !== 'off') {\n                        const optgroupClosable = document.createElement('div');\n                        optgroupClosable.classList.add(this.classes.optgroupClosable);\n                        const optgroupClosableSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        optgroupClosableSvg.setAttribute('viewBox', '0 0 100 100');\n                        optgroupClosableSvg.classList.add(this.classes.arrow);\n                        optgroupClosable.appendChild(optgroupClosableSvg);\n                        const optgroupClosableArrow = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        optgroupClosableSvg.appendChild(optgroupClosableArrow);\n                        if (d.options.some((o) => o.selected) || this.content.search.input.value.trim() !== '') {\n                            optgroupClosable.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'open') {\n                            optgroupEl.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'close') {\n                            optgroupEl.classList.add(this.classes.close);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                        }\n                        optgroupLabel.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (optgroupEl.classList.contains(this.classes.close)) {\n                                optgroupEl.classList.remove(this.classes.close);\n                                optgroupEl.classList.add(this.classes.open);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                            }\n                            else {\n                                optgroupEl.classList.remove(this.classes.open);\n                                optgroupEl.classList.add(this.classes.close);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                            }\n                        });\n                        optgroupActions.appendChild(optgroupClosable);\n                    }\n                    optgroupEl.appendChild(optgroupLabel);\n                    for (const o of d.options) {\n                        optgroupEl.appendChild(this.option(o));\n                    }\n                    this.content.list.appendChild(optgroupEl);\n                }\n                if (d instanceof Option) {\n                    this.content.list.appendChild(this.option(d));\n                }\n            }\n        }\n        option(option) {\n            if (option.placeholder) {\n                const placeholder = document.createElement('div');\n                placeholder.classList.add(this.classes.option);\n                placeholder.classList.add(this.classes.hide);\n                return placeholder;\n            }\n            const optionEl = document.createElement('div');\n            optionEl.dataset.id = option.id;\n            optionEl.id = option.id;\n            optionEl.classList.add(this.classes.option);\n            optionEl.setAttribute('role', 'option');\n            if (option.class) {\n                option.class.split(' ').forEach((dataClass) => {\n                    optionEl.classList.add(dataClass);\n                });\n            }\n            if (option.style) {\n                optionEl.style.cssText = option.style;\n            }\n            if (this.settings.searchHighlight && this.content.search.input.value.trim() !== '') {\n                optionEl.innerHTML = this.highlightText(option.html !== '' ? option.html : option.text, this.content.search.input.value, this.classes.searchHighlighter);\n            }\n            else if (option.html !== '') {\n                optionEl.innerHTML = option.html;\n            }\n            else {\n                optionEl.textContent = option.text;\n            }\n            if (this.settings.showOptionTooltips && optionEl.textContent) {\n                optionEl.setAttribute('title', optionEl.textContent);\n            }\n            if (!option.display) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.disabled) {\n                optionEl.classList.add(this.classes.disabled);\n            }\n            if (option.selected && this.settings.hideSelected) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.selected) {\n                optionEl.classList.add(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'true');\n                this.main.main.setAttribute('aria-activedescendant', optionEl.id);\n            }\n            else {\n                optionEl.classList.remove(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'false');\n            }\n            optionEl.addEventListener('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const selectedOptions = this.store.getSelected();\n                const element = e.currentTarget;\n                const elementID = String(element.dataset.id);\n                if (option.disabled || (option.selected && !this.settings.allowDeselect)) {\n                    return;\n                }\n                if ((this.settings.isMultiple && this.settings.maxSelected <= selectedOptions.length && !option.selected) ||\n                    (this.settings.isMultiple && this.settings.minSelected >= selectedOptions.length && option.selected)) {\n                    return;\n                }\n                let shouldUpdate = false;\n                const before = this.store.getSelectedOptions();\n                let after = [];\n                if (this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = before.filter((o) => o.id !== elementID);\n                    }\n                    else {\n                        after = before.concat(option);\n                    }\n                }\n                if (!this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = [];\n                    }\n                    else {\n                        after = [option];\n                    }\n                }\n                if (!this.callbacks.beforeChange) {\n                    shouldUpdate = true;\n                }\n                if (this.callbacks.beforeChange) {\n                    if (this.callbacks.beforeChange(after, before) === false) {\n                        shouldUpdate = false;\n                    }\n                    else {\n                        shouldUpdate = true;\n                    }\n                }\n                if (shouldUpdate) {\n                    if (!this.store.getOptionByID(elementID)) {\n                        this.callbacks.addOption(option);\n                    }\n                    this.callbacks.setSelected(after.map((o) => o.value), false);\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            });\n            return optionEl;\n        }\n        destroy() {\n            this.main.main.remove();\n            this.content.main.remove();\n        }\n        highlightText(str, search, className) {\n            let completedString = str;\n            const regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)', 'i');\n            if (!str.match(regex)) {\n                return str;\n            }\n            const matchStartPosition = str.match(regex).index;\n            const matchEndPosition = matchStartPosition + str.match(regex)[0].toString().length;\n            const originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition);\n            completedString = completedString.replace(regex, `<mark class=\"${className}\">${originalTextFoundByRegex}</mark>`);\n            return completedString;\n        }\n        moveContentAbove() {\n            const mainHeight = this.main.main.offsetHeight;\n            const contentHeight = this.content.main.offsetHeight;\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.classList.add(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.content.main.classList.add(this.classes.openAbove);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-' + (mainHeight + contentHeight - 1) + 'px 0px 0px 0px';\n            this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n            this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n            this.content.main.style.width = containerRect.width + 'px';\n        }\n        moveContentBelow() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.add(this.classes.openBelow);\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.add(this.classes.openBelow);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-1px 0px 0px 0px';\n            if (this.settings.contentPosition !== 'relative') {\n                this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n                this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n                this.content.main.style.width = containerRect.width + 'px';\n            }\n        }\n        ensureElementInView(container, element) {\n            const cTop = container.scrollTop + container.offsetTop;\n            const cBottom = cTop + container.clientHeight;\n            const eTop = element.offsetTop;\n            const eBottom = eTop + element.clientHeight;\n            if (eTop < cTop) {\n                container.scrollTop -= cTop - eTop;\n            }\n            else if (eBottom > cBottom) {\n                container.scrollTop += eBottom - cBottom;\n            }\n        }\n        putContent() {\n            const mainHeight = this.main.main.offsetHeight;\n            const mainRect = this.main.main.getBoundingClientRect();\n            const contentHeight = this.content.main.offsetHeight;\n            const spaceBelow = window.innerHeight - (mainRect.top + mainHeight);\n            if (spaceBelow <= contentHeight) {\n                if (mainRect.top > contentHeight) {\n                    return 'up';\n                }\n                else {\n                    return 'down';\n                }\n            }\n            return 'down';\n        }\n        updateDeselectAll() {\n            if (!this.store || !this.settings) {\n                return;\n            }\n            const selected = this.store.getSelectedOptions();\n            const hasSelectedItems = selected && selected.length > 0;\n            const isMultiple = this.settings.isMultiple;\n            const allowDeselect = this.settings.allowDeselect;\n            const deselectButton = this.main.deselect.main;\n            const hideClass = this.classes.hide;\n            if (allowDeselect && !(isMultiple && !hasSelectedItems)) {\n                deselectButton.classList.remove(hideClass);\n            }\n            else {\n                deselectButton.classList.add(hideClass);\n            }\n        }\n    }\n\n    class Select {\n        constructor(select) {\n            this.listen = false;\n            this.observer = null;\n            this.select = select;\n            this.valueChange = this.valueChange.bind(this);\n            this.select.addEventListener('change', this.valueChange, {\n                passive: true,\n            });\n            this.observer = new MutationObserver(this.observeCall.bind(this));\n            this.changeListen(true);\n        }\n        enable() {\n            this.select.disabled = false;\n        }\n        disable() {\n            this.select.disabled = true;\n        }\n        hideUI() {\n            this.select.tabIndex = -1;\n            this.select.style.display = 'none';\n            this.select.setAttribute('aria-hidden', 'true');\n        }\n        showUI() {\n            this.select.removeAttribute('tabindex');\n            this.select.style.display = '';\n            this.select.removeAttribute('aria-hidden');\n        }\n        changeListen(listen) {\n            this.listen = listen;\n            if (listen) {\n                if (this.observer) {\n                    this.observer.observe(this.select, {\n                        subtree: true,\n                        childList: true,\n                        attributes: true,\n                    });\n                }\n            }\n            if (!listen) {\n                if (this.observer) {\n                    this.observer.disconnect();\n                }\n            }\n        }\n        valueChange(ev) {\n            if (this.listen && this.onValueChange) {\n                this.onValueChange(this.getSelectedValues());\n            }\n            return true;\n        }\n        observeCall(mutations) {\n            if (!this.listen) {\n                return;\n            }\n            let classChanged = false;\n            let disabledChanged = false;\n            let optgroupOptionChanged = false;\n            for (const m of mutations) {\n                if (m.target === this.select) {\n                    if (m.attributeName === 'disabled') {\n                        disabledChanged = true;\n                    }\n                    if (m.attributeName === 'class') {\n                        classChanged = true;\n                    }\n                }\n                if (m.target.nodeName === 'OPTGROUP' || m.target.nodeName === 'OPTION') {\n                    optgroupOptionChanged = true;\n                }\n            }\n            if (classChanged && this.onClassChange) {\n                this.onClassChange(this.select.className.split(' '));\n            }\n            if (disabledChanged && this.onDisabledChange) {\n                this.changeListen(false);\n                this.onDisabledChange(this.select.disabled);\n                this.changeListen(true);\n            }\n            if (optgroupOptionChanged && this.onOptionsChange) {\n                this.changeListen(false);\n                this.onOptionsChange(this.getData());\n                this.changeListen(true);\n            }\n        }\n        getData() {\n            let data = [];\n            const nodes = this.select.childNodes;\n            for (const n of nodes) {\n                if (n.nodeName === 'OPTGROUP') {\n                    data.push(this.getDataFromOptgroup(n));\n                }\n                if (n.nodeName === 'OPTION') {\n                    data.push(this.getDataFromOption(n));\n                }\n            }\n            return data;\n        }\n        getDataFromOptgroup(optgroup) {\n            let data = {\n                id: optgroup.id,\n                label: optgroup.label,\n                selectAll: optgroup.dataset ? optgroup.dataset.selectall === 'true' : false,\n                selectAllText: optgroup.dataset ? optgroup.dataset.selectalltext : 'Select all',\n                closable: optgroup.dataset ? optgroup.dataset.closable : 'off',\n                options: [],\n            };\n            const options = optgroup.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTION') {\n                    data.options.push(this.getDataFromOption(o));\n                }\n            }\n            return data;\n        }\n        getDataFromOption(option) {\n            return {\n                id: option.id,\n                value: option.value,\n                text: option.text,\n                html: option.dataset && option.dataset.html ? option.dataset.html : '',\n                selected: option.selected,\n                display: option.style.display === 'none' ? false : true,\n                disabled: option.disabled,\n                mandatory: option.dataset ? option.dataset.mandatory === 'true' : false,\n                placeholder: option.dataset.placeholder === 'true',\n                class: option.className,\n                style: option.style.cssText,\n                data: option.dataset,\n            };\n        }\n        getSelectedValues() {\n            let values = [];\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroupOptions = o.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            if (option.selected) {\n                                values.push(option.value);\n                            }\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    if (option.selected) {\n                        values.push(option.value);\n                    }\n                }\n            }\n            return values;\n        }\n        setSelected(value) {\n            this.changeListen(false);\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroup = o;\n                    const optgroupOptions = optgroup.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            option.selected = value.includes(option.value);\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    option.selected = value.includes(option.value);\n                }\n            }\n            this.changeListen(true);\n        }\n        updateSelect(id, style, classes) {\n            this.changeListen(false);\n            if (id) {\n                this.select.dataset.id = id;\n            }\n            if (style) {\n                this.select.style.cssText = style;\n            }\n            if (classes) {\n                this.select.className = '';\n                classes.forEach((c) => {\n                    if (c.trim() !== '') {\n                        this.select.classList.add(c.trim());\n                    }\n                });\n            }\n            this.changeListen(true);\n        }\n        updateOptions(data) {\n            this.changeListen(false);\n            this.select.innerHTML = '';\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    this.select.appendChild(this.createOptgroup(d));\n                }\n                if (d instanceof Option) {\n                    this.select.appendChild(this.createOption(d));\n                }\n            }\n            this.select.dispatchEvent(new Event('change'));\n            this.changeListen(true);\n        }\n        createOptgroup(optgroup) {\n            const optgroupEl = document.createElement('optgroup');\n            optgroupEl.id = optgroup.id;\n            optgroupEl.label = optgroup.label;\n            if (optgroup.selectAll) {\n                optgroupEl.dataset.selectAll = 'true';\n            }\n            if (optgroup.closable !== 'off') {\n                optgroupEl.dataset.closable = optgroup.closable;\n            }\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    optgroupEl.appendChild(this.createOption(o));\n                }\n            }\n            return optgroupEl;\n        }\n        createOption(info) {\n            const optionEl = document.createElement('option');\n            optionEl.id = info.id;\n            optionEl.value = info.value;\n            optionEl.innerHTML = info.text;\n            if (info.html !== '') {\n                optionEl.setAttribute('data-html', info.html);\n            }\n            if (info.selected) {\n                optionEl.selected = info.selected;\n            }\n            if (info.disabled) {\n                optionEl.disabled = true;\n            }\n            if (info.display === false) {\n                optionEl.style.display = 'none';\n            }\n            if (info.placeholder) {\n                optionEl.setAttribute('data-placeholder', 'true');\n            }\n            if (info.mandatory) {\n                optionEl.setAttribute('data-mandatory', 'true');\n            }\n            if (info.class) {\n                info.class.split(' ').forEach((optionClass) => {\n                    optionEl.classList.add(optionClass);\n                });\n            }\n            if (info.data && typeof info.data === 'object') {\n                Object.keys(info.data).forEach((key) => {\n                    optionEl.setAttribute('data-' + kebabCase(key), info.data[key]);\n                });\n            }\n            return optionEl;\n        }\n        destroy() {\n            this.changeListen(false);\n            this.select.removeEventListener('change', this.valueChange);\n            if (this.observer) {\n                this.observer.disconnect();\n                this.observer = null;\n            }\n            delete this.select.dataset.id;\n            this.showUI();\n        }\n    }\n\n    class SlimSelect {\n        constructor(config) {\n            var _a;\n            this.events = {\n                search: undefined,\n                searchFilter: (opt, search) => {\n                    return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n                },\n                addable: undefined,\n                beforeChange: undefined,\n                afterChange: undefined,\n                beforeOpen: undefined,\n                afterOpen: undefined,\n                beforeClose: undefined,\n                afterClose: undefined,\n            };\n            this.windowResize = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.windowScroll = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.documentClick = (e) => {\n                if (!this.settings.isOpen) {\n                    return;\n                }\n                if (e.target && !hasClassInTree(e.target, this.settings.id)) {\n                    this.close(e.type);\n                }\n            };\n            this.windowVisibilityChange = () => {\n                if (document.hidden) {\n                    this.close();\n                }\n            };\n            this.selectEl = (typeof config.select === 'string' ? document.querySelector(config.select) : config.select);\n            if (!this.selectEl) {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Could not find select element'));\n                }\n                return;\n            }\n            if (this.selectEl.tagName !== 'SELECT') {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Element isnt of type select'));\n                }\n                return;\n            }\n            if (this.selectEl.dataset.ssid) {\n                this.destroy();\n            }\n            this.settings = new Settings(config.settings);\n            const debounceEvents = ['afterChange', 'beforeOpen', 'afterOpen', 'beforeClose', 'afterClose'];\n            for (const key in config.events) {\n                if (!config.events.hasOwnProperty(key)) {\n                    continue;\n                }\n                if (debounceEvents.indexOf(key) !== -1) {\n                    this.events[key] = debounce(config.events[key], 100);\n                }\n                else {\n                    this.events[key] = config.events[key];\n                }\n            }\n            this.settings.disabled = ((_a = config.settings) === null || _a === void 0 ? void 0 : _a.disabled) ? config.settings.disabled : this.selectEl.disabled;\n            this.settings.isMultiple = this.selectEl.multiple;\n            this.settings.style = this.selectEl.style.cssText;\n            this.settings.class = this.selectEl.className.split(' ');\n            this.select = new Select(this.selectEl);\n            this.select.updateSelect(this.settings.id, this.settings.style, this.settings.class);\n            this.select.hideUI();\n            this.select.onValueChange = (values) => {\n                this.setSelected(values);\n            };\n            this.select.onClassChange = (classes) => {\n                this.settings.class = classes;\n                this.render.updateClassStyles();\n            };\n            this.select.onDisabledChange = (disabled) => {\n                if (disabled) {\n                    this.disable();\n                }\n                else {\n                    this.enable();\n                }\n            };\n            this.select.onOptionsChange = (data) => {\n                this.setData(data);\n            };\n            this.store = new Store(this.settings.isMultiple ? 'multiple' : 'single', config.data ? config.data : this.select.getData());\n            if (config.data) {\n                this.select.updateOptions(this.store.getData());\n            }\n            const callbacks = {\n                open: this.open.bind(this),\n                close: this.close.bind(this),\n                addable: this.events.addable ? this.events.addable : undefined,\n                setSelected: this.setSelected.bind(this),\n                addOption: this.addOption.bind(this),\n                search: this.search.bind(this),\n                beforeChange: this.events.beforeChange,\n                afterChange: this.events.afterChange,\n            };\n            this.render = new Render(this.settings, this.store, callbacks);\n            this.render.renderValues();\n            this.render.renderOptions(this.store.getData());\n            const selectAriaLabel = this.selectEl.getAttribute('aria-label');\n            const selectAriaLabelledBy = this.selectEl.getAttribute('aria-labelledby');\n            if (selectAriaLabel) {\n                this.render.main.main.setAttribute('aria-label', selectAriaLabel);\n            }\n            else if (selectAriaLabelledBy) {\n                this.render.main.main.setAttribute('aria-labelledby', selectAriaLabelledBy);\n            }\n            if (this.selectEl.parentNode) {\n                this.selectEl.parentNode.insertBefore(this.render.main.main, this.selectEl.nextSibling);\n            }\n            document.addEventListener('click', this.documentClick);\n            window.addEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.addEventListener('scroll', this.windowScroll, false);\n            }\n            document.addEventListener('visibilitychange', this.windowVisibilityChange);\n            if (this.settings.disabled) {\n                this.disable();\n            }\n            if (this.settings.alwaysOpen) {\n                this.open();\n            }\n            this.selectEl.slim = this;\n        }\n        enable() {\n            this.settings.disabled = false;\n            this.select.enable();\n            this.render.enable();\n        }\n        disable() {\n            this.settings.disabled = true;\n            this.select.disable();\n            this.render.disable();\n        }\n        getData() {\n            return this.store.getData();\n        }\n        setData(data) {\n            const selected = this.store.getSelected();\n            const err = this.store.validateDataArray(data);\n            if (err) {\n                if (this.events.error) {\n                    this.events.error(err);\n                }\n                return;\n            }\n            this.store.setData(data);\n            const dataClean = this.store.getData();\n            this.select.updateOptions(dataClean);\n            this.render.renderValues();\n            this.render.renderOptions(dataClean);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        getSelected() {\n            return this.store.getSelected();\n        }\n        setSelected(value, runAfterChange = true) {\n            const selected = this.store.getSelected();\n            this.store.setSelectedBy('value', Array.isArray(value) ? value : [value]);\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            if (this.render.content.search.input.value !== '') {\n                this.search(this.render.content.search.input.value);\n            }\n            else {\n                this.render.renderOptions(data);\n            }\n            if (runAfterChange && this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        addOption(option) {\n            const selected = this.store.getSelected();\n            if (!this.store.getDataOptions().some((o) => { var _a; return o.value === ((_a = option.value) !== null && _a !== void 0 ? _a : option.text); })) {\n                this.store.addOption(option);\n            }\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            this.render.renderOptions(data);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        open() {\n            if (this.settings.disabled || this.settings.isOpen) {\n                return;\n            }\n            if (this.events.beforeOpen) {\n                this.events.beforeOpen();\n            }\n            this.render.open();\n            if (this.settings.showSearch) {\n                this.render.searchFocus();\n            }\n            this.settings.isOpen = true;\n            setTimeout(() => {\n                if (this.events.afterOpen) {\n                    this.events.afterOpen();\n                }\n                if (this.settings.isOpen) {\n                    this.settings.isFullOpen = true;\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.contentPosition === 'absolute') {\n                if (this.settings.intervalMove) {\n                    clearInterval(this.settings.intervalMove);\n                }\n                this.settings.intervalMove = setInterval(this.render.moveContent.bind(this.render), 500);\n            }\n        }\n        close(eventType = null) {\n            if (!this.settings.isOpen || this.settings.alwaysOpen) {\n                return;\n            }\n            if (this.events.beforeClose) {\n                this.events.beforeClose();\n            }\n            this.render.close();\n            if (this.render.content.search.input.value !== '') {\n                this.search('');\n            }\n            this.render.mainFocus(eventType);\n            this.settings.isOpen = false;\n            this.settings.isFullOpen = false;\n            setTimeout(() => {\n                if (this.events.afterClose) {\n                    this.events.afterClose();\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.intervalMove) {\n                clearInterval(this.settings.intervalMove);\n            }\n        }\n        search(value) {\n            if (this.render.content.search.input.value !== value) {\n                this.render.content.search.input.value = value;\n            }\n            if (!this.events.search) {\n                this.render.renderOptions(value === '' ? this.store.getData() : this.store.search(value, this.events.searchFilter));\n                return;\n            }\n            this.render.renderSearching();\n            const searchResp = this.events.search(value, this.store.getSelectedOptions());\n            if (searchResp instanceof Promise) {\n                searchResp\n                    .then((data) => {\n                    this.render.renderOptions(this.store.partialToFullData(data));\n                })\n                    .catch((err) => {\n                    this.render.renderError(typeof err === 'string' ? err : err.message);\n                });\n                return;\n            }\n            else if (Array.isArray(searchResp)) {\n                this.render.renderOptions(this.store.partialToFullData(searchResp));\n            }\n            else {\n                this.render.renderError('Search event must return a promise or an array of data');\n            }\n        }\n        destroy() {\n            document.removeEventListener('click', this.documentClick);\n            window.removeEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.removeEventListener('scroll', this.windowScroll, false);\n            }\n            document.removeEventListener('visibilitychange', this.windowVisibilityChange);\n            this.store.setData([]);\n            this.render.destroy();\n            this.select.destroy();\n        }\n    }\n\n    return SlimSelect;\n\n}));\n","import { fetchBreeds, fetchCatByBreed } from './js/cat-api.js';\nimport SlimSelect from 'slim-select';\nimport 'slim-select/dist/slimselect.css';\nconst URL_SEARCH = 'https://api.thecatapi.com/v1/images/search';\nconst BreedSelect = document.querySelector('.breed-select');\nBreedSelect.setAttribute('hidden', true);\nconst CatInfo = document.querySelector('.cat-info');\nconst loader = document.querySelector('.loader');\nconst errorr = document.querySelector('.error');\nerrorr.style.display = 'none';\nfetchBreeds() \n  .then(data => {\n    const markUpSelect = data\n      .map(({ name, id }) => `<option value=\"${id}\">${name}</option>`)\n      .join('');\n    BreedSelect.innerHTML = markUpSelect;\n    new SlimSelect({ \n      select: '.breed-select', \n    });\n    loader.style.display = 'none';\n    BreedSelect.removeAttribute('hidden');\n  })\n  .catch(error => {\n    loader.style.display = 'none';\n    errorr.style.display = 'block';\n    console.log(error);\n  });\n\nBreedSelect.addEventListener('change', evt => {\n  const IDBreed = evt.currentTarget.value;\n  CatInfo.innerHTML = '';\n  loader.style.display = 'block'; \n  fetchCatByBreed(IDBreed)\n    .then(data => {\n      const markUpPhoto = data.map(({url,breeds: {0: { name, origin, description, temperament },},}) =>\n`<img src=\"${url}\" alt=\"${name}\" width=\"${500}\" height=\"${250}\">\n  <div class=\"js-some\">\n  <h2 class=\"hmain-js\" >${name}</h2>\n  <h3 class=\"hmain3-js\">${origin}</h3>\n  <p class=\"text\"> ${description}</p>\n  <p class= \"text\"> Temperament: ${temperament}</p>\n  </div>`\n        )\n        .join('');\n      loader.style.display = 'none';\n      CatInfo.innerHTML = markUpPhoto;\n    })\n    .catch(error => {\n      loader.style.display = 'none';\n      errorr.style.display = 'block';\n      console.log(error);\n    });\n});\n","const URL_BREED = 'https://api.thecatapi.com/v1/breeds';\nconst URL_SEACRH_BREED ='https://api.thecatapi.com/v1/images/search?breed_ids=';\nconst api_key ='live_UYcNHMXMZUE8f3KQl2VWhf8LHKxL9n8ZxPDMX3MYZGFamrSUaM0QqEjYkFXdce9u';\nfunction fetchBreeds() {\n  return fetch(URL_BREED, {\n    headers: {\n      'x-api-key': api_key,\n    },\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Mistake');\n    }\n    return response.json();\n  });\n}\n\nfunction fetchCatByBreed(breedId) {\n  return fetch(URL_SEACRH_BREED+`${breedId}`, {\n    headers: {\n      'x-api-key': api_key,\n    },\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Mistake');\n    }\n    return response.json();\n  });\n}\nexport { fetchBreeds, fetchCatByBreed }; "],"names":["$f753f16ae3da2a89$exports","generateID","Math","random","toString","substring","hasClassInTree","element","className","hasClass","e","c","classList","contains","dataset","id","parentByClass","document","parentNode","debounce","func","wait","immediate","timeout","args","context","self","later","apply","callNow","clearTimeout","setTimeout","isEqual","a","b","JSON","stringify","kebabCase","str","result","replace","match","toLowerCase","toUpperCase","Settings","constructor","settings","this","style","class","isMultiple","isOpen","isFullOpen","intervalMove","disabled","undefined","alwaysOpen","showSearch","ariaLabel","searchPlaceholder","searchText","searchingText","searchHighlight","closeOnSelect","contentLocation","body","contentPosition","openPosition","placeholderText","allowDeselect","hideSelected","showOptionTooltips","minSelected","maxSelected","timeoutDelay","maxValuesShown","maxValuesMessage","Optgroup","optgroup","label","selectAll","selectAllText","closable","options","o","push","Option","option","value","text","html","selected","display","mandatory","placeholder","data","Store","validateDataArray","Array","isArray","Error","dataObj","validateOption","partialToFullData","dataFinal","forEach","optOptions","length","setData","selectType","setSelectedBy","getSelected","getData","filter","getDataOptions","addOption","concat","selectedType","selectedValues","firstOption","hasSelected","includes","selectedOptions","getSelectedOptions","opt","getSelectedIDs","selectedIDs","op","getOptgroupByID","getOptionByID","getSelectType","getFirstOption","search","searchFilter","trim","includeOptgroup","dataSearch","type","Render","enable","main","remove","classes","content","input","disable","add","open","arrow","path","setAttribute","arrowOpen","openAbove","openBelow","moveContent","store","selectedId","selectedOption","list","querySelector","ensureElementInView","close","arrowClose","updateClassStyles","removeAttribute","cssText","updateAriaAttributes","role","mainDiv","_a","createElement","tabIndex","onkeydown","key","callbacks","highlight","highlighted","click","onclick","values","appendChild","deselect","hide","stopPropagation","shouldDelete","before","after","beforeChange","setSelected","updateDeselectAll","afterChange","deselectSvg","createElementNS","deselectPath","arrowPath","svg","mainFocus","eventType","focus","preventScroll","placeholderOption","innerHTML","renderValues","renderMultipleValues","renderSingleValue","selectedSingle","singleValue","single","innerText","outerHTML","currentNodes","childNodes","max","textContent","removeNodes","i","node","getAttribute","n","valueOut","hasChildNodes","removeChild","d","shouldAdd","String","multipleValue","insertBefore","insertAdjacentElement","valueText","deleteDiv","valueDelete","preventDefault","deleteSvg","deletePath","optionDelete","contentDiv","searchDiv","listDiv","putContent","moveContentAbove","moveContentBelow","addable","searchReturn","readOnly","oninput","target","ctrlKey","plus","plusPath","addablePath","inputValue","runFinish","oo","newOption","addableValue","Promise","then","searchFocus","getOptions","notPlaceholder","notDisabled","notHidden","query","from","querySelectorAll","dir","prevOption","prevParent","parentElement","optgroupLabel","selectOption","selectParent","renderError","error","errorDiv","renderSearching","searchingDiv","searching","renderOptions","noResults","optgroupEl","optgroupLabelText","optgroupActions","optgroupSelectAll","allSelected","o1","selectAllSvg","selectAllBox","optgroupSelectAllBox","selectAllCheck","optgroupSelectAllCheck","addEventListener","currentSelected","newSelected","s","map","o5","optgroupClosable","optgroupClosableSvg","optgroupClosableArrow","some","o2","optionEl","split","dataClass","highlightText","searchHighlighter","currentTarget","elementID","shouldUpdate","destroy","completedString","regex","RegExp","matchStartPosition","index","matchEndPosition","originalTextFoundByRegex","mainHeight","offsetHeight","contentHeight","containerRect","getBoundingClientRect","margin","top","height","window","scrollY","left","scrollX","width","container","cTop","scrollTop","offsetTop","cBottom","clientHeight","eTop","eBottom","mainRect","innerHeight","hasSelectedItems","deselectButton","hideClass","Select","select","hideUI","showUI","changeListen","listen","observer","observe","subtree","childList","attributes","disconnect","valueChange","ev","onValueChange","getSelectedValues","observeCall","mutations","classChanged","disabledChanged","optgroupOptionChanged","m","attributeName","nodeName","onClassChange","onDisabledChange","onOptionsChange","nodes","getDataFromOptgroup","getDataFromOption","selectall","selectalltext","optgroupOptions","updateSelect","updateOptions","createOptgroup","createOption","dispatchEvent","Event","info","optionClass","Object","keys","removeEventListener","bind","passive","MutationObserver","SlimSelect","render","err","events","dataClean","runAfterChange","beforeOpen","afterOpen","clearInterval","setInterval","beforeClose","afterClose","searchResp","catch","message","documentClick","windowResize","windowScroll","windowVisibilityChange","config","indexOf","hidden","selectEl","tagName","ssid","debounceEvents","hasOwnProperty","multiple","selectAriaLabel","selectAriaLabelledBy","nextSibling","slim","factory","$1f0dc3b9307be026$var$BreedSelect","$1f0dc3b9307be026$var$CatInfo","$1f0dc3b9307be026$var$loader","$1f0dc3b9307be026$var$errorr","fetch","headers","response","ok","json","markUpSelect","name","join","$parcel$interopDefault","console","log","evt","IDBreed","breedId","markUpPhoto","url","breeds","origin","description","temperament"],"version":3,"file":"index.d38f81d4.js.map"}